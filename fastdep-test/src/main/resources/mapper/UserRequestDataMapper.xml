<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louislivi.fastdep.test.mapper.douyin.UserRequestDataMapper">
    <resultMap id="BaseResultMap" type="com.louislivi.fastdep.test.dao.UserRequestData">
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="query" jdbcType="LONGVARCHAR" property="query"/>
        <result column="headers" jdbcType="LONGVARCHAR" property="headers"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user_request_data
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.louislivi.fastdep.test.dao.UserRequestData">
        insert into user_request_data (user_id, nickname, avatar,
                                       created_time, update_time, query,
                                       headers)
        values (#{userId,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
                #{createdTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{query,jdbcType=LONGVARCHAR},
                #{headers,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.louislivi.fastdep.test.dao.UserRequestData">
        update user_request_data
        set nickname     = #{nickname,jdbcType=VARCHAR},
            avatar       = #{avatar,jdbcType=VARCHAR},
            created_time = #{createdTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            query        = #{query,jdbcType=LONGVARCHAR},
            headers      = #{headers,jdbcType=LONGVARCHAR}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select user_id, nickname, avatar, created_time, update_time, query, headers
        from user_request_data
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select user_id, nickname, avatar, created_time, update_time, query, headers
        from user_request_data
    </select>

    <select id="selectOptions" resultMap="BaseResultMap">
        select user_id, nickname, avatar
        from user_request_data
    </select>
</mapper>